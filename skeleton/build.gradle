buildscript {
    ext {
      grailsVersion = "3.0.0.BUILD-SNAPSHOT"
    }
    repositories {
        mavenLocal()
        maven { url "http://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.3.1.RELEASE"
}

ext {
  grailsVersion = "3.0.0.BUILD-SNAPSHOT"
  isJava8Compatible = org.gradle.api.JavaVersion.current().isJava8Compatible()
  gradleWrapperVersion = "2.3-20141120230022+0000"
}

version "0.1-SNAPSHOT"
group "org.grails.plugins"

apply plugin: "io.spring.dependency-management"
apply plugin: "grails-plugin"
apply plugin: "maven"
apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'


repositories {
  mavenLocal()
  mavenCentral()
  maven { url "http://repo.grails.org/grails/core" }
}


dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}


dependencies {
  provided "org.grails:grails-dependencies"  
  testCompile "org.grails:grails-plugin-testing"
  console "org.grails:grails-console"
}

eclipse {
    classpath {
        plusConfigurations += [configurations.provided]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.provided]
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId project.name
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact source:"${sourceSets.main.output.classesDir}/META-INF/grails-plugin.xml", 
                     classifier:"plugin", 
                     extension:'xml'
        }
    }


    repositories {
        maven {
            credentials {
                def user = System.getenv('GRAILS_CENTRAL_USERNAME') ?: project.properties.get('grailsPluginsUsername')
                def pass = System.getenv("GRAILS_CENTRAL_PASSWORD") ?: project.properties.get('grailsPluginsPassword')

                username user
                password pass

            }
            if(version.endsWith('-SNAPSHOT')) {
              url "https://repo.grails.org/grails/plugins3-snapshots-local"  
            }
            else {
              url "https://repo.grails.org/grails/plugins3-releases-local"   
            }
        }
    }
}


task wrapper(type: Wrapper) {
  gradleVersion = gradleWrapperVersion
}