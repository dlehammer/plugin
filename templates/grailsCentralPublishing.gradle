publishing {
    publications {
        maven(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}
                def pomDependencies = node.get('dependencies').get(0).get('dependency')
                pomDependencies.each() { pomDep ->
                    String pomVer = pomDep.get("version").text()
                    // simply remove dependencies without a version
                    // version-less dependencies are handled with dependencyManagement
                    // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                    if(pomVer.isEmpty()) {
                        pomDep.replaceNode {}
                    }
                }
            }
            artifactId project.name
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifact source:"${sourceSets.main.output.classesDir}/META-INF/grails-plugin.xml",
                     classifier:"plugin",
                     extension:'xml'
        }
    }


    repositories {
        maven {
            credentials {
                def user = System.getenv('GRAILS_CENTRAL_USERNAME') ?: project.properties.get('grailsPluginsUsername')
                def pass = System.getenv("GRAILS_CENTRAL_PASSWORD") ?: project.properties.get('grailsPluginsPassword')

                username user
                password pass

            }
            if(version.endsWith('-SNAPSHOT')) {
                url "https://repo.grails.org/grails/plugins3-snapshots-local"
            }
        }
    }
}

task install(dependsOn: project.tasks.withType(PublishToMavenLocal))
